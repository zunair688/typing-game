{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Micro Tech\\\\Desktop\\\\car-racingapp\\\\src\\\\Header\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingGame = () => {\n  _s();\n  const [paragraph, setParagraph] = useState('');\n  const [typedText, setTypedText] = useState('');\n  const [highlightColor, setHighlightColor] = useState('');\n  useEffect(() => {\n    generateParagraph();\n  }, []);\n  const generateParagraph = () => {\n    // Same code as before...\n    const paragraphLength = Math.floor(Math.random() * 5) + 3; // Generate a paragraph with 3 to 7 sentences\n    const sentences = ['The quick brown fox jumps over the lazy dog.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.', 'A journey of a thousand miles begins with a single step.', 'In the midst of chaos, there is also opportunity.', 'Life is what happens when you\\'re busy making other plans.', 'Success is not final, failure is not fatal: It is the courage to continue that counts.', 'Happiness is not something ready-made. It comes from your own actions.', 'The only way to do great work is to love what you do.', 'Believe you can and you\\'re halfway there.', 'Don\\'t watch the clock; do what it does. Keep going.'];\n    let generatedParagraph = '';\n    for (let i = 0; i < paragraphLength; i++) {\n      const randomIndex = Math.floor(Math.random() * sentences.length);\n      generatedParagraph += sentences[randomIndex] + ' ';\n    }\n    setParagraph(generatedParagraph.trim());\n  };\n  const handleTyping = event => {\n    const {\n      value\n    } = event.target;\n    setTypedText(value);\n    highlightMistakes(paragraph, value);\n  };\n  const highlightMistakes = (originalText, typedText) => {\n    let color = '';\n    let highlightedText = originalText;\n    if (typedText !== '') {\n      const typedWords = typedText.split(' ');\n      const originalWords = originalText.split(' ');\n      for (let i = 0; i < typedWords.length; i++) {\n        if (typedWords[i] !== originalWords[i]) {\n          highlightedText = highlightedText.replace(originalWords[i], `<mark class=\"mistake\">${originalWords[i]}</mark>`);\n          color = 'red';\n        }\n      }\n    }\n    setHighlightColor(color);\n    setParagraph(highlightedText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Typing Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-text\",\n      style: {\n        backgroundColor: highlightColor\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"pg\",\n        dangerouslySetInnerHTML: {\n          __html: paragraph\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: typedText,\n      onChange: handleTyping\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerin\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateParagraph,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(TypingGame, \"OpYjamX141pITtZZwcXr4coRdEU=\");\n_c = TypingGame;\nvar _c;\n$RefreshReg$(_c, \"TypingGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypingGame","_s","paragraph","setParagraph","typedText","setTypedText","highlightColor","setHighlightColor","generateParagraph","paragraphLength","Math","floor","random","sentences","generatedParagraph","i","randomIndex","length","trim","handleTyping","event","value","target","highlightMistakes","originalText","color","highlightedText","typedWords","split","originalWords","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","id","dangerouslySetInnerHTML","__html","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Micro Tech/Desktop/car-racingapp/src/Header/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TypingGame = () => {\r\n    const [paragraph, setParagraph] = useState('');\r\n    const [typedText, setTypedText] = useState('');\r\n    const [highlightColor, setHighlightColor] = useState('');\r\n\r\n    useEffect(() => {\r\n        generateParagraph();\r\n    }, []);\r\n\r\n    const generateParagraph = () => {\r\n        // Same code as before...\r\n        const paragraphLength = Math.floor(Math.random() * 5) + 3; // Generate a paragraph with 3 to 7 sentences\r\n        const sentences = [\r\n            'The quick brown fox jumps over the lazy dog.',\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\r\n            'A journey of a thousand miles begins with a single step.',\r\n            'In the midst of chaos, there is also opportunity.',\r\n            'Life is what happens when you\\'re busy making other plans.',\r\n            'Success is not final, failure is not fatal: It is the courage to continue that counts.',\r\n            'Happiness is not something ready-made. It comes from your own actions.',\r\n            'The only way to do great work is to love what you do.',\r\n            'Believe you can and you\\'re halfway there.',\r\n            'Don\\'t watch the clock; do what it does. Keep going.',\r\n        ];\r\n\r\n        let generatedParagraph = '';\r\n        for (let i = 0; i < paragraphLength; i++) {\r\n            const randomIndex = Math.floor(Math.random() * sentences.length);\r\n            generatedParagraph += sentences[randomIndex] + ' ';\r\n        }\r\n\r\n        setParagraph(generatedParagraph.trim());\r\n    }\r\n\r\n    const handleTyping = (event) => {\r\n        const { value } = event.target;\r\n        setTypedText(value);\r\n        highlightMistakes(paragraph, value);\r\n    };\r\n\r\n    const highlightMistakes = (originalText, typedText) => {\r\n        let color = '';\r\n        let highlightedText = originalText;\r\n\r\n        if (typedText !== '') {\r\n            const typedWords = typedText.split(' ');\r\n            const originalWords = originalText.split(' ');\r\n\r\n            for (let i = 0; i < typedWords.length; i++) {\r\n                if (typedWords[i] !== originalWords[i]) {\r\n                    highlightedText = highlightedText.replace(\r\n                        originalWords[i],\r\n                        `<mark class=\"mistake\">${originalWords[i]}</mark>`\r\n                    );\r\n                    color = 'red';\r\n                }\r\n            }\r\n        }\r\n\r\n        setHighlightColor(color);\r\n        setParagraph(highlightedText);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Typing Game</h1>\r\n            <div\r\n                className=\"background-text\"\r\n                style={{ backgroundColor: highlightColor }}\r\n            >\r\n                <p\r\n                    id=\"pg\"\r\n                    dangerouslySetInnerHTML={{ __html: paragraph }}\r\n                ></p>\r\n            </div>\r\n            <input type=\"text\" value={typedText} onChange={handleTyping} />\r\n            <div className=\"containerin\">\r\n                <br />\r\n                <button onClick={generateParagraph}>Restart</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}