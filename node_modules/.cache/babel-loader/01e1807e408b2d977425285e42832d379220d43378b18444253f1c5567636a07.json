{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Micro Tech\\\\Desktop\\\\car-racingapp\\\\src\\\\Header\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingGame = () => {\n  _s();\n  const [paragraph, setParagraph] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [highlightedParagraph, setHighlightedParagraph] = useState('');\n  const [score, setScore] = useState({\n    cpm: 0,\n    accuracy: 0,\n    wpm: 0\n  });\n  const [timer, setTimer] = useState(120);\n\n  // Automatically generate a new paragraph on component mount\n  useEffect(() => {\n    generateParagraph();\n  }, []);\n\n  // Generate a new random paragraph\n  const generateParagraph = () => {\n    const words = ['Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consectetur', 'adipiscing', 'elit.'];\n    const randomParagraph = words.slice(0, Math.floor(Math.random() * words.length)).join(' ');\n    setParagraph(randomParagraph);\n    setHighlightedParagraph('');\n    setUserInput('');\n    setScore({\n      cpm: 0,\n      accuracy: 0,\n      wpm: 0\n    });\n  };\n\n  // Update user input and highlight the corresponding paragraph\n  const handleInputChange = event => {\n    const input = event.target.value;\n    const highlighted = paragraph.substring(0, input.length);\n    setUserInput(input);\n    setHighlightedParagraph(highlighted);\n    calculateScore(input);\n  };\n\n  // Calculate typing speed and accuracy\n  const calculateScore = input => {\n    const correctCharacters = input.split('').filter((char, index) => char === paragraph[index]);\n    const cpm = correctCharacters.length / timer * 60;\n    const accuracy = correctCharacters.length / input.length * 100;\n    const wpm = cpm / 5;\n    setScore({\n      cpm,\n      accuracy,\n      wpm\n    });\n  };\n\n  // Start the countdown timer\n  useEffect(() => {\n    let interval;\n    if (timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [timer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Paragraph:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: highlightedParagraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Type the paragraph:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: userInput,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Score:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CPM: \", score.cpm.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Accuracy: \", score.accuracy.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"WPM: \", score.wpm.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time: \", timer > 0 ? `${timer} seconds` : 'Time is over']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), timer === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateParagraph,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(TypingGame, \"ZFRvmtYv6RxKsGHerhdsyUUGF/0=\");\n_c = TypingGame;\nexport default TypingGame;\nvar _c;\n$RefreshReg$(_c, \"TypingGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypingGame","_s","paragraph","setParagraph","userInput","setUserInput","highlightedParagraph","setHighlightedParagraph","score","setScore","cpm","accuracy","wpm","timer","setTimer","generateParagraph","words","randomParagraph","slice","Math","floor","random","length","join","handleInputChange","event","input","target","value","highlighted","substring","calculateScore","correctCharacters","split","filter","char","index","interval","setInterval","prevTimer","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","toFixed","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Micro Tech/Desktop/car-racingapp/src/Header/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TypingGame = () => {\r\n    const [paragraph, setParagraph] = useState('');\r\n    const [userInput, setUserInput] = useState('');\r\n    const [highlightedParagraph, setHighlightedParagraph] = useState('');\r\n    const [score, setScore] = useState({\r\n        cpm: 0,\r\n        accuracy: 0,\r\n        wpm: 0\r\n    });\r\n    const [timer, setTimer] = useState(120);\r\n\r\n    // Automatically generate a new paragraph on component mount\r\n    useEffect(() => {\r\n        generateParagraph();\r\n    }, []);\r\n\r\n    // Generate a new random paragraph\r\n    const generateParagraph = () => {\r\n        const words = ['Lorem', 'ipsum', 'dolor', 'sit', 'amet,', 'consectetur', 'adipiscing', 'elit.'];\r\n        const randomParagraph = words.slice(0, Math.floor(Math.random() * words.length)).join(' ');\r\n        setParagraph(randomParagraph);\r\n        setHighlightedParagraph('');\r\n        setUserInput('');\r\n        setScore({\r\n            cpm: 0,\r\n            accuracy: 0,\r\n            wpm: 0\r\n        });\r\n    };\r\n\r\n    // Update user input and highlight the corresponding paragraph\r\n    const handleInputChange = (event) => {\r\n        const input = event.target.value;\r\n        const highlighted = paragraph.substring(0, input.length);\r\n        setUserInput(input);\r\n        setHighlightedParagraph(highlighted);\r\n        calculateScore(input);\r\n    };\r\n\r\n    // Calculate typing speed and accuracy\r\n    const calculateScore = (input) => {\r\n        const correctCharacters = input.split('').filter((char, index) => char === paragraph[index]);\r\n        const cpm = (correctCharacters.length / timer) * 60;\r\n        const accuracy = (correctCharacters.length / input.length) * 100;\r\n        const wpm = cpm / 5;\r\n\r\n        setScore({\r\n            cpm,\r\n            accuracy,\r\n            wpm\r\n        });\r\n    };\r\n\r\n    // Start the countdown timer\r\n    useEffect(() => {\r\n        let interval;\r\n\r\n        if (timer > 0) {\r\n            interval = setInterval(() => {\r\n                setTimer((prevTimer) => prevTimer - 1);\r\n            }, 1000);\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        return () => clearInterval(interval);\r\n    }, [timer]);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>Paragraph:</h2>\r\n                <p>{highlightedParagraph}</p>\r\n            </div>\r\n            <div>\r\n                <h2>Type the paragraph:</h2>\r\n                <textarea value={userInput} onChange={handleInputChange} />\r\n            </div>\r\n            <div>\r\n                <h2>Score:</h2>\r\n                <p>CPM: {score.cpm.toFixed(2)}</p>\r\n                <p>Accuracy: {score.accuracy.toFixed(2)}%</p>\r\n                <p>WPM: {score.wpm.toFixed(2)}</p>\r\n                <p>Time: {timer > 0 ? `${timer} seconds` : 'Time is over'}</p>\r\n            </div>\r\n            {timer === 0 && (\r\n                <div>\r\n                    <button onClick={generateParagraph}>Play Again</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypingGame;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}