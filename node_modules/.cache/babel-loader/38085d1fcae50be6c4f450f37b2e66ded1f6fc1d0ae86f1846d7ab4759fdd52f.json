{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Micro Tech\\\\Desktop\\\\car-racingapp\\\\src\\\\Header\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TypingGame = () => {\n  _s();\n  const [paragraph, setParagraph] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    generateParagraph();\n  }, []);\n  const generateParagraph = () => {\n    // Same code as before...\n    const paragraphLength = Math.floor(Math.random() * 5) + 3; // Generate a paragraph with 3 to 7 sentences\n    const sentences = ['The quick brown fox jumps over the lazy dog.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.', 'A journey of a thousand miles begins with a single step.', 'In the midst of chaos, there is also opportunity.', 'Life is what happens when you\\'re busy making other plans.', 'Success is not final, failure is not fatal: It is the courage to continue that counts.', 'Happiness is not something ready-made. It comes from your own actions.', 'The only way to do great work is to love what you do.', 'Believe you can and you\\'re halfway there.', 'Don\\'t watch the clock; do what it does. Keep going.'];\n    let generatedParagraph = '';\n    for (let i = 0; i < paragraphLength; i++) {\n      const randomIndex = Math.floor(Math.random() * sentences.length);\n      generatedParagraph += sentences[randomIndex] + ' ';\n    }\n    setParagraph(generatedParagraph.trim());\n    pg.querySelectorAll('span')[0].classList.add('active');\n    document.addEventListener(\"keydown\", () => userinput.focus());\n    pg.addEventListener(\"click\", () => userinput.focus());\n    totalmistake.innerText = 0;\n    totalcpm.innerText = 0;\n    totalwpm.innerText = 0;\n    totaltime.innerText = timeRemaining;\n  };\n  const handleRestartClick = () => {\n    setInputValue('');\n  };\n  const handleButtonClick = () => {\n    // Call the onChange functions\n    handleRestartClick();\n    generateParagraph();\n  };\n  const pg = document.getElementById('pg');\n  const userinput = document.querySelector('.textinput');\n  const resetbtn = document.querySelector('.containerin button');\n  const totaltime = document.querySelector('.time .txt2');\n  const totalwpm = document.querySelector('.wpm .txt2');\n  const totalmistake = document.querySelector('.mistake .txt2');\n  const totalcpm = document.querySelector('.cpm .txt2');\n  let timer;\n  let maxTime = 120;\n  let timeRemaining = maxTime;\n  let charIndex = 0;\n  let mistakes = 0;\n  let isTyping = 0;\n  const startTyping = () => {\n    let characters = pg.querySelectorAll('span');\n    // console.log(characters);\n    //the\n    //you\n    let typedChar = userinput.value.split(\"\")[charIndex];\n    if (charIndex < characters.length - 1 && timeRemaining > 0) {\n      if (!isTyping) {\n        // 0 or false\n        timer = setInterval(startTimer, 1000);\n        isTyping = true;\n      }\n      if (typedChar == null) {\n        if (charIndex > 0) {\n          charIndex--;\n          if (characters[charIndex].classList.contains(\"incorrect\")) {\n            mistakes--;\n          }\n          characters[charIndex].classList.remove(\"incorrect\", \"correct\");\n        }\n      } else {\n        if (characters[charIndex].innerText == typedChar) {\n          characters[charIndex].classList.add(\"correct\");\n        } else {\n          characters[charIndex].classList.add(\"incorrect\");\n          mistakes++;\n        }\n        charIndex++;\n      }\n      characters.forEach(char => {\n        char.classList.remove(\"active\");\n      });\n      characters[charIndex].classList.add(\"active\");\n\n      // WPM is calculated by dividing the number of characters typed correctly (charIndex - mistakes) by 5 (the average number of characters per word) and dividing that result by the time it took to type those words (maxTime - timeRemaining), and then multiplying the result by 60 to convert to minutes.\n\n      let wpm = Math.round((charIndex - mistakes) / 5 / (maxTime - timeRemaining) * 60);\n      wpm = wpm < 0 || !wpm || wpm == Infinity ? 0 : wpm;\n      totalwpm.innerText = wpm;\n      totalmistake.innerText = mistakes;\n      totalcpm.innerText = charIndex - mistakes;\n    } else {\n      clearInterval(timer);\n      isTyping = false;\n    }\n  };\n  const startTimer = () => {\n    if (timeRemaining > 0) {\n      timeRemaining--;\n      totaltime.innerText = timeRemaining;\n      let wpm = Math.round((charIndex - mistakes) / 5 / (maxTime - timeRemaining) * 60);\n      totalwpm.innerHTMl = wpm;\n    } else {\n      clearInterval(timer);\n      isTyping = false;\n    }\n  };\n  const resetGame = () => {\n    generateParagraph();\n    clearInterval(timer);\n    timeRemaining = maxTime;\n    charIndex = 0;\n    mistakes = 0;\n    isTyping = 0;\n    userinput.value = \"\";\n    totaltime.innerText = timeRemaining;\n    totalwpm.innerText = 0;\n    totalmistake.innerText = 0;\n    totalcpm.innerText = 0;\n  };\n  generateParagraph();\n  resetbtn.addEventListener('click', resetGame);\n  userinput.addEventListener('input', startTyping);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white',\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: \"Typing Speed Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pg\",\n          dangerouslySetInnerHTML: {\n            __html: paragraph\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textinput\",\n          type: \"text\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"containerin\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text1\",\n                children: \" Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text2\",\n                children: \" 120 s \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wpm\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text1\",\n                children: \" WPM \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text2\",\n                children: \" 0 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mistake\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text1\",\n                children: \" Mistake\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text2\",\n                children: \" 0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cpm\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text1\",\n                children: \" CPM \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text2\",\n                children: \" 0 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleButtonClick,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(TypingGame, \"E5EI1NKPRL+qbUk0QYwaDfPTcyg=\");\n_c = TypingGame;\nexport default TypingGame;\nvar _c;\n$RefreshReg$(_c, \"TypingGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TypingGame","_s","paragraph","setParagraph","inputValue","setInputValue","generateParagraph","paragraphLength","Math","floor","random","sentences","generatedParagraph","i","randomIndex","length","trim","pg","querySelectorAll","classList","add","document","addEventListener","userinput","focus","totalmistake","innerText","totalcpm","totalwpm","totaltime","timeRemaining","handleRestartClick","handleButtonClick","getElementById","querySelector","resetbtn","timer","maxTime","charIndex","mistakes","isTyping","startTyping","characters","typedChar","value","split","setInterval","startTimer","contains","remove","forEach","char","wpm","round","Infinity","clearInterval","innerHTMl","resetGame","children","style","color","textAlign","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","className","id","dangerouslySetInnerHTML","__html","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Micro Tech/Desktop/car-racingapp/src/Header/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TypingGame = () => {\r\n    const [paragraph, setParagraph] = useState('');\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        generateParagraph();\r\n    }, []);\r\n\r\n    const generateParagraph = () => {\r\n        // Same code as before...\r\n        const paragraphLength = Math.floor(Math.random() * 5) + 3; // Generate a paragraph with 3 to 7 sentences\r\n        const sentences = [\r\n            'The quick brown fox jumps over the lazy dog.',\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\r\n            'A journey of a thousand miles begins with a single step.',\r\n            'In the midst of chaos, there is also opportunity.',\r\n            'Life is what happens when you\\'re busy making other plans.',\r\n            'Success is not final, failure is not fatal: It is the courage to continue that counts.',\r\n            'Happiness is not something ready-made. It comes from your own actions.',\r\n            'The only way to do great work is to love what you do.',\r\n            'Believe you can and you\\'re halfway there.',\r\n            'Don\\'t watch the clock; do what it does. Keep going.',\r\n        ];\r\n\r\n        let generatedParagraph = '';\r\n        for (let i = 0; i < paragraphLength; i++) {\r\n            const randomIndex = Math.floor(Math.random() * sentences.length);\r\n            generatedParagraph += sentences[randomIndex] + ' ';\r\n        }\r\n\r\n        setParagraph(generatedParagraph.trim());\r\n\r\n        pg.querySelectorAll('span')[0].classList.add('active');\r\n        document.addEventListener(\"keydown\", () => userinput.focus())\r\n        pg.addEventListener(\"click\", () => userinput.focus())\r\n\r\n        totalmistake.innerText = 0;\r\n        totalcpm.innerText = 0;\r\n        totalwpm.innerText = 0;\r\n        totaltime.innerText = timeRemaining;\r\n    }\r\n    const handleRestartClick = () => {\r\n        setInputValue('');\r\n    };\r\n    const handleButtonClick = () => {\r\n        // Call the onChange functions\r\n        handleRestartClick();\r\n        generateParagraph();}\r\n\r\n    const pg = document.getElementById('pg');\r\n    const userinput = document.querySelector('.textinput');\r\n    const resetbtn = document.querySelector('.containerin button');\r\n    const totaltime = document.querySelector('.time .txt2');\r\n    const totalwpm = document.querySelector('.wpm .txt2');\r\n    const totalmistake = document.querySelector('.mistake .txt2');\r\n    const totalcpm = document.querySelector('.cpm .txt2');\r\n    let timer;\r\n    let maxTime = 120;\r\n    let timeRemaining = maxTime;\r\n    let charIndex = 0;\r\n    let mistakes = 0;\r\n    let isTyping = 0;\r\n\r\n    const startTyping = () => {\r\n        let characters = pg.querySelectorAll('span');\r\n        // console.log(characters);\r\n        //the\r\n        //you\r\n        let typedChar = userinput.value.split(\"\")[charIndex];\r\n        if (charIndex < characters.length - 1 && timeRemaining > 0) {\r\n            if (!isTyping) {\r\n                // 0 or false\r\n                timer = setInterval(startTimer, 1000);\r\n                isTyping = true;\r\n            }\r\n\r\n            if (typedChar == null) {\r\n                if (charIndex > 0) {\r\n                    charIndex--;\r\n                    if (characters[charIndex].classList.contains(\"incorrect\")) {\r\n                        mistakes--;\r\n                    }\r\n                    characters[charIndex].classList.remove(\"incorrect\", \"correct\");\r\n                }\r\n            }\r\n            else {\r\n                if (characters[charIndex].innerText == typedChar) {\r\n                    characters[charIndex].classList.add(\"correct\");\r\n\r\n                }\r\n                else {\r\n                    characters[charIndex].classList.add(\"incorrect\");\r\n                    mistakes++;\r\n                }\r\n                charIndex++;\r\n            }\r\n\r\n            characters.forEach(char => {\r\n                char.classList.remove(\"active\");\r\n            })\r\n            characters[charIndex].classList.add(\"active\");\r\n\r\n            // WPM is calculated by dividing the number of characters typed correctly (charIndex - mistakes) by 5 (the average number of characters per word) and dividing that result by the time it took to type those words (maxTime - timeRemaining), and then multiplying the result by 60 to convert to minutes.\r\n\r\n\r\n            let wpm = Math.round(((charIndex - mistakes) / 5) / (maxTime - timeRemaining) * 60)\r\n            wpm = wpm < 0 || !wpm || wpm == Infinity ? 0 : wpm;\r\n            totalwpm.innerText = wpm;\r\n            totalmistake.innerText = mistakes;\r\n            totalcpm.innerText = charIndex - mistakes;\r\n        }\r\n\r\n        else{\r\n            clearInterval(timer);\r\n            isTyping = false;\r\n        }\r\n    }\r\n    const startTimer = () => {\r\n        if(timeRemaining >0){\r\n            timeRemaining--;\r\n            totaltime.innerText = timeRemaining;\r\n            let wpm = Math.round(((charIndex - mistakes) / 5) / (maxTime - timeRemaining) * 60)\r\n            totalwpm.innerHTMl = wpm;\r\n        }\r\n        else{\r\n            clearInterval(timer);\r\n            isTyping = false;\r\n        }\r\n    }\r\n    const resetGame = () => {\r\n        generateParagraph();\r\n        clearInterval(timer)\r\n        timeRemaining = maxTime;\r\n        charIndex = 0;\r\n        mistakes = 0;\r\n        isTyping = 0;\r\n        userinput.value = \"\";\r\n        totaltime.innerText = timeRemaining;\r\n        totalwpm.innerText = 0;\r\n        totalmistake.innerText = 0;\r\n        totalcpm.innerText = 0;\r\n    }\r\n\r\n    generateParagraph();\r\n    resetbtn.addEventListener('click', resetGame);\r\n    userinput.addEventListener('input', startTyping);\r\n\r\n    return (\r\n        <>\r\n\r\n            <h1 style={{color:'white',textAlign:'center',marginTop:'20px'}}>Typing Speed Game</h1>\r\n\r\n        <div className=\"container\" >\r\n\r\n            <div className=\"background-text\">\r\n                {/*// style={{ backgroundColor: highlightColor }*/}\r\n\r\n                <p\r\n                    id=\"pg\"\r\n                    dangerouslySetInnerHTML={{ __html: paragraph }}\r\n                ></p>\r\n                <input className={\"textinput\"} type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={(e) => setInputValue(e.target.value)} />\r\n              <div className=\"containerin\">\r\n                <br />\r\n               <div  className=\"result\">\r\n                     <div className={\"time\"}>\r\n                         <p className={\"text1\"}> Time</p>\r\n                         <p className={\"text2\"}> 120 s </p>\r\n                     </div>\r\n\r\n\r\n                   <div className={\"wpm\"}>\r\n                       <p className={\"text1\"}> WPM </p>\r\n                       <p className={\"text2\"}> 0 </p>\r\n                   </div>\r\n\r\n                   <div className={\"mistake\"}>\r\n                      <p className={\"text1\"}> Mistake</p>\r\n                       <p className={\"text2\"}> 0</p>\r\n                   </div>\r\n\r\n\r\n                   <div className={\"cpm\"}>\r\n                       <p className={\"text1\"}> CPM </p>\r\n                       <p className={\"text2\"}> 0 </p>\r\n                   </div>\r\n               </div>\r\n\r\n                <button onClick={handleButtonClick} >Start</button>\r\n              </div>\r\n            </div>\r\n        </div>\r\n       </>\r\n    );\r\n};\r\n\r\nexport default TypingGame;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}